---
import type { Footer } from "../i18n/utils";
import Container from "./Container.astro";

const { t } = Astro.props as { t: Footer };

const icons: { [key: string]: string } = {
  github: `<path d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z"/>`,
  linkedin: `<path d="M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z"/>`,
  freelancer: `<path d='M16.25 16.25v-10h-10v-.625c0-1.034.841-1.875 1.875-1.875H10V0H8.125A5.632 5.632 0 0 0 2.5 5.625v.625H0V10h2.5v6.25H0V20h8.75v-3.75h-2.5V10h6.285v6.25H10V20h8.75v-3.75h-2.5z'/><circle cx='14.375' cy='1.875' r='1.875'/>`
}
---

<footer class="pt-4 pb-8 md:pt-8 md:pb-16">
  <Container>
    <div class="m-auto md:w-10/12 lg:w-8/12 xl:w-9/12">
      <div class="flex flex-wrap items-center justify-between md:flex-nowrap">
        <div class="flex w-full justify-center space-x-12 text-text-muted dark:text-text-muted-dark sm:w-7/12 md:space-evenly">
          
          <ul class="list-inside list-disc space-y-8">
            {t.links.map(link => (
              <li><a href={link.url} class="transition hover:text-primary">{link.label}</a></li>
            ))}
          </ul>
  
          <ul role="list" class="space-y-8">
            {t.social.map(socialLink => (
                <li>
                    <a href={socialLink.url} target="_blank" rel="noopener noreferrer" class="flex items-center space-x-3 transition hover:text-primary">
                                                {socialLink.name === 'freelancer' ? (
                            <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-5" viewBox="-2.5 -2 24 24" set:html={icons[socialLink.name]} />
                        ) : (
                            <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="w-5" viewBox="0 0 16 16" set:html={icons[socialLink.name]} />
                        )}
                        <span>{socialLink.label}</span>
                    </a>
                </li>
            ))}
          </ul>
        </div>
        
        <div class="m-auto mt-16 w-10/12 space-y-6 pl-6 text-center sm:mt-auto sm:w-5/12 sm:text-left">
          <span class="block text-text-subtle dark:text-text-subtle-dark">
            {t.tagline}
          </span>
  
          <span class="block text-text-subtle dark:text-text-subtle-dark" set:html={`${t.copyright} ${new Date().getFullYear()}`} />
  
          <span class="flex justify-between text-text-muted dark:text-text-default-dark">
            {t.legal.map(link => (
                <a href={link.url} class="font-medium transition hover:text-primary">{link.label}</a>
            ))}
          </span>
  
          <span class="block text-text-subtle dark:text-text-subtle-dark">
            {t.help.text} <a href={t.help.url} class="font-semibold text-text-muted dark:text-text-default-dark transition hover:text-primary">{t.help.contact}</a>
          </span>
        </div>
      </div>
    </div>
  </Container>
</footer>