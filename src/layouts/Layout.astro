---
import { AstroFont } from 'astro-font';
import { ClientRouter } from "astro:transitions";
import AppFooter from "../components/AppFooter.astro";
import AppHeader from "../components/AppHeader.astro";
import "./../global.css"

const { t, lang } = Astro.props;
const common = t.common;
---

<!DOCTYPE html>
<html lang={common.lang}>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="description" content={common.meta.description} />
        <title>{common.meta.title}</title>

        <!-- Open Graph / Facebook -->
        <meta property="og:type" content="website" />
        <meta property="og:url" content={Astro.url.href} />
        <meta property="og:title" content={common.meta.title} />
        <meta property="og:description" content={common.meta.description} />
        <meta property="og:image" content={new URL("/og-image.jpeg", Astro.site).href} />

        <!-- Twitter -->
        <meta property="twitter:card" content="summary_large_image" />
        <meta property="twitter:url" content={Astro.url.href} />
        <meta property="twitter:title" content={common.meta.title} />
        <meta property="twitter:description" content={common.meta.description} />
        <meta property="twitter:image" content={new URL("/og-image.jpeg", Astro.site).href} />

        <link rel="canonical" href={Astro.url.href} />

        <slot name="json-ld" />

        <AstroFont
            config={[
                {
                    src: [],
                    name: "Urbanist",
                    preload: true,
                    display: "swap",
                    selector: "html",
                    fallback: "sans-serif",
                    googleFontsURL: 'https://fonts.googleapis.com/css2?family=Urbanist:wght@400;500;600;700&display=swap',
                },
            ]}
        />
        <ClientRouter />
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/intl-tel-input@25.12.2/build/css/intlTelInput.css">
    </head>
    <body class="bg-bg-canvas dark:bg-bg-canvas-dark">
        <AppHeader t={common} lang={lang} />
        <slot />
        <AppFooter t={t.footer} />
    </body>
    <script>
    // Nuestra carta de seguridad, ahora con *charme* de depuración
    function scrollToHashDebug() {
        // Solo jugamos si hay una carta de "hash"
        if (window.location.hash) {
            const hash = window.location.hash;

            // Empezamos a mostrar la jugada en la consola
            console.group(`[Gambito DEBUG] Jugada de Scroll para: ${hash}`);
            console.log(`Evento 'astro:page-load' disparado.`);

            // 1. La comprobación INMEDIATA
            // Esto se ejecuta en el mismo 'tick' que 'astro:page-load'
            console.log("Comprobando el DOM... *immédiatement*.");
            const elementNow = document.querySelector(hash);
            
            // Aquí está la apuesta: en producción, esto será 'null'
            console.log("Elemento encontrado AHORA:", elementNow);
            
            if (elementNow) {
                 console.log("¡*Curieux*! El elemento ya estaba. El problema es otro.");
            } else {
                 console.log("¡*Voilà*! El elemento es 'null'. El DOM aún no está pintado.");
            }

            // 2. La comprobación con retraso (la carta ganadora)
            // Damos 100ms al navegador para "pintar" el nuevo DOM
            setTimeout(() => {
                console.log("Comprobando otra vez... *après 100ms*.");
                const elementLater = document.querySelector(hash);

                // Aquí es donde deberíamos ver el elemento
                console.log("Elemento encontrado DESPUÉS:", elementLater);

                if (elementLater) {
                    console.log("¡*Bingo*! Ahora sí. Haciendo scroll suave.");
                    elementLater.scrollIntoView({ behavior: 'smooth' });
                } else {
                    console.log("El elemento sigue sin aparecer. Mi apuesta era incorrecta.");
                }
                
                console.groupEnd(); // Cerramos el grupo
            }, 100); // 100ms es una apuesta segura
        }
    }

    // Escuchamos el evento mágico de Astro
    document.addEventListener('astro:page-load', scrollToHashDebug, { once: false });
    </script>
</html>
